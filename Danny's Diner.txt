-- Q1: What is the total amount each customer spent at the restaurant?

SELECT s.customer_id, SUM(price) AS total_amount
FROM sales s
JOIN members m on
s.customer_id = m.customer_id
JOIN menu me on
s.product_id = me.product_id
GROUP BY s.customer_id;


-- Q2:  How many days has each customer visited the restaurant?

SELECT customer_id, COUNT(DISTINCT order_date) FROM sales
GROUP BY customer_id
ORDER BY customer_id;


--Q3. What was the first item from the menu purchased by each customer?

SELECT order_date, product_name, customer_id  FROM menu m
JOIN sales s ON
m.product_id = s.product_id
WHERE order_date IN (SELECT MIN(order_date) FROM sales GROUP BY customer_id)
GROUP BY order_date, product_name, Customer_id
ORDER BY customer_id;


--Q4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT product_name, COUNT(product_name) AS "no of time purchesd"
FROM menu m
JOIN sales s ON
m.product_id = s.product_id
GROUP BY product_name
LIMIT 1;

--Q5. Which item was the most popular for each customer?

SELECT customer_id, MAX(product_name) FROM menu m
JOIN sales s ON
m.product_id = s.product_id
GROUP BY customer_id, product_name
ORDER BY customer_id;


--Q6. Which item was purchased first by the customer after they became a member?

SELECT customer_id, product_name, order_date, join_date
FROM (SELECT s.customer_id, product_name, order_date, join_date,
	  ROW_NUMBER() OVER(PARTITION BY s.customer_id ORDER BY order_date) ra
	  FROM sales s
JOIN members m ON
s.customer_id = m.customer_id
JOIN menu me ON
s.product_id = me.product_id
WHERE order_date >= join_date) a
WHERE ra = 1;

--Q7. Which item was purchased just before the customer became a member?

SELECT customer_id, product_name, order_date, join_date
FROM (SELECT s.customer_id, product_name, order_date, join_date,
	  RANK() OVER(PARTITION BY s.customer_id ORDER BY order_date desc) ra
	  FROM sales s
JOIN members m ON
s.customer_id = m.customer_id
JOIN menu me ON
s.product_id = me.product_id
WHERE order_date < join_date) a
WHERE ra = 1;


--Q8. What is the total items and amount spent for each member before they became a member?

SELECT s.customer_id, COUNT(order_date), SUM(price) AS amount
FROM sales s
JOIN members m ON
s.customer_id = m.customer_id
JOIN menu me ON
s.product_id = me.product_id
WHERE order_date < join_date
GROUP BY s.customer_id;


--Q9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT s.customer_id,
SUM (CASE WHEN product_name = 'sushi' THEN price*20 ELSE price*10 END) AS points
FROM sales s
JOIN menu m ON
s.product_id = m.product_id
GROUP BY s.customer_id;


--Q10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

SELECT s.customer_id,
SUM
(CASE WHEN product_name = 'sushi' THEN price*20 
WHEN order_date BETWEEN join_date AND join_date + 6 THEN price*20 ELSE price*10 
END) AS points
FROM sales s
JOIN members m ON
s.customer_id = m.customer_id
JOIN menu me on
s.product_id = me.product_id
GROUP BY s.customer_id
ORDER BY s.customer_id;

